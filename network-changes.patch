diff --git a/Cargo.lock b/Cargo.lock
index 8b5877d..0157f84 100644
--- a/Cargo.lock
+++ b/Cargo.lock
@@ -783,36 +783,6 @@ version = "1.5.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "bb1f6b1ce1c140482ea30ddd3335fc0024ac7ee112895426e0a629a6c20adfe3"
 
-[[package]]
-name = "ellipticoin"
-version = "0.1.6"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ff7a5cbf7f6c564d00a4bda4623fafcc62beeaee600eee0adb588781d64c7ea2"
-dependencies = [
- "ellipticoin-api",
- "ellipticoin-mock-api",
-]
-
-[[package]]
-name = "ellipticoin-api"
-version = "0.0.2"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f40da65cc96db7c3140500bc7dc93ac13d8733920425a6a9d1f28d42b4b89930"
-dependencies = [
- "wasm-rpc",
- "wasm-rpc-macros",
-]
-
-[[package]]
-name = "ellipticoin-mock-api"
-version = "0.1.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "53a42a7899bf2122e9cd5d1b2f5688ee9642cd9993b10bf8b3741f8f2ac803e7"
-dependencies = [
- "wasm-rpc",
- "wasm-rpc-macros",
-]
-
 [[package]]
 name = "ellipticoind"
 version = "0.1.0"
@@ -1256,7 +1226,7 @@ dependencies = [
  "num-traits",
  "rand 0.6.5",
  "serde",
- "serde_cbor 0.9.0 (git+https://github.com/baloo/cbor?branch=baloo/fixup-serde_bytes_dependency)",
+ "serde_cbor 0.9.0",
  "sha2",
 ]
 
@@ -1589,7 +1559,7 @@ dependencies = [
 [[package]]
 name = "libp2p"
 version = "0.13.2"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "bytes 0.5.3",
  "futures 0.3.1",
@@ -1623,7 +1593,7 @@ dependencies = [
 [[package]]
 name = "libp2p-core"
 version = "0.13.2"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "asn1_der",
  "bs58",
@@ -1657,7 +1627,7 @@ dependencies = [
 [[package]]
 name = "libp2p-core-derive"
 version = "0.13.0"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "quote 1.0.2",
  "syn 1.0.11",
@@ -1666,7 +1636,7 @@ dependencies = [
 [[package]]
 name = "libp2p-deflate"
 version = "0.5.0"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "flate2",
  "futures 0.3.1",
@@ -1676,7 +1646,7 @@ dependencies = [
 [[package]]
 name = "libp2p-dns"
 version = "0.13.0"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "futures 0.3.1",
  "libp2p-core",
@@ -1686,7 +1656,7 @@ dependencies = [
 [[package]]
 name = "libp2p-floodsub"
 version = "0.13.1"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "bs58",
  "bytes 0.5.3",
@@ -1703,7 +1673,7 @@ dependencies = [
 [[package]]
 name = "libp2p-identify"
 version = "0.13.2"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "bytes 0.5.3",
  "futures 0.3.1",
@@ -1721,7 +1691,7 @@ dependencies = [
 [[package]]
 name = "libp2p-kad"
 version = "0.13.2"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "arrayvec",
  "bytes 0.5.3",
@@ -1747,7 +1717,7 @@ dependencies = [
 [[package]]
 name = "libp2p-mdns"
 version = "0.13.1"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "async-std",
  "data-encoding",
@@ -1769,7 +1739,7 @@ dependencies = [
 [[package]]
 name = "libp2p-mplex"
 version = "0.13.0"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "bytes 0.5.3",
  "fnv",
@@ -1784,7 +1754,7 @@ dependencies = [
 [[package]]
 name = "libp2p-noise"
 version = "0.11.1"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "bytes 0.5.3",
  "curve25519-dalek 1.2.3",
@@ -1803,7 +1773,7 @@ dependencies = [
 [[package]]
 name = "libp2p-ping"
 version = "0.13.1"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "bytes 0.5.3",
  "futures 0.3.1",
@@ -1819,7 +1789,7 @@ dependencies = [
 [[package]]
 name = "libp2p-plaintext"
 version = "0.13.1"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "bytes 0.5.3",
  "futures 0.3.1",
@@ -1835,7 +1805,7 @@ dependencies = [
 [[package]]
 name = "libp2p-secio"
 version = "0.13.1"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "aes-ctr",
  "ctr",
@@ -1863,7 +1833,7 @@ dependencies = [
 [[package]]
 name = "libp2p-swarm"
 version = "0.3.0"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "futures 0.3.1",
  "libp2p-core",
@@ -1875,7 +1845,7 @@ dependencies = [
 [[package]]
 name = "libp2p-tcp"
 version = "0.13.0"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "async-std",
  "bytes 0.5.3",
@@ -1890,7 +1860,7 @@ dependencies = [
 [[package]]
 name = "libp2p-uds"
 version = "0.13.0"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "async-std",
  "futures 0.3.1",
@@ -1901,7 +1871,7 @@ dependencies = [
 [[package]]
 name = "libp2p-wasm-ext"
 version = "0.6.0"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "futures 0.3.1",
  "js-sys",
@@ -1914,7 +1884,7 @@ dependencies = [
 [[package]]
 name = "libp2p-websocket"
 version = "0.13.0"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "async-tls",
  "bytes 0.5.3",
@@ -1934,7 +1904,7 @@ dependencies = [
 [[package]]
 name = "libp2p-yamux"
 version = "0.13.0"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "futures 0.3.1",
  "libp2p-core",
@@ -2043,12 +2013,6 @@ version = "0.3.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "71d96e3f3c0b6325d8ccd83c33b28acb183edcb6c67938ba104ec546854b0882"
 
-[[package]]
-name = "memory_units"
-version = "0.4.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8452105ba047068f40ff7093dd1d9da90898e63dd61736462e9cdda6a90ad3c3"
-
 [[package]]
 name = "metered_wasmi"
 version = "0.5.4"
@@ -2056,7 +2020,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "3fd0eb6c376c39ee617931d55293c6f05475aa4d801c2cff53680e44df48593a"
 dependencies = [
  "libc",
- "memory_units 0.3.0",
+ "memory_units",
  "num-rational",
  "num-traits",
  "parity-wasm",
@@ -2186,14 +2150,6 @@ dependencies = [
  "ws2_32-sys",
 ]
 
-[[package]]
-name = "mock_ellipticoin"
-version = "0.1.3"
-dependencies = [
- "wasm-rpc",
- "wasm-rpc-macros",
-]
-
 [[package]]
 name = "multipart"
 version = "0.16.1"
@@ -2215,7 +2171,7 @@ dependencies = [
 [[package]]
 name = "multistream-select"
 version = "0.6.1"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "bytes 0.5.3",
  "futures 0.1.29",
@@ -2381,7 +2337,7 @@ dependencies = [
 [[package]]
 name = "parity-multiaddr"
 version = "0.6.0"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "arrayref",
  "bs58",
@@ -2398,7 +2354,7 @@ dependencies = [
 [[package]]
 name = "parity-multihash"
 version = "0.2.0"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "blake2",
  "bytes 0.5.3",
@@ -3057,7 +3013,7 @@ dependencies = [
 [[package]]
 name = "rw-stream-sink"
 version = "0.1.2"
-source = "git+https://github.com/masonforest/rust-libp2p.git#cdea6c0284d57be55fa9873dcd79cd33414b71ed"
+source = "git+https://github.com/masonforest/rust-libp2p.git#8129756af716a00c532ea1beb5bb46553642b787"
 dependencies = [
  "futures 0.3.1",
  "static_assertions",
@@ -3202,17 +3158,6 @@ dependencies = [
  "serde_bytes 0.10.5",
 ]
 
-[[package]]
-name = "serde_cbor"
-version = "0.9.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "45cd6d95391b16cd57e88b68be41d504183b7faae22030c0cc3b3f73dd57b2fd"
-dependencies = [
- "byteorder 1.3.2",
- "half",
- "serde",
-]
-
 [[package]]
 name = "serde_cbor"
 version = "0.10.2"
@@ -3586,30 +3531,6 @@ version = "0.2.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "ac6de5d6171ae395cd957a9cfdcf9a41e39fe23e558b29043104a896a79021b6"
 
-[[package]]
-name = "tiny-keccak"
-version = "2.0.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "2953ca5148619bc99695c1274cb54c5275bbb913c6adad87e72eaf8db9787f69"
-dependencies = [
- "crunchy",
-]
-
-[[package]]
-name = "token"
-version = "0.1.0"
-dependencies = [
- "ellipticoin",
- "hex",
- "lazy_static",
- "libsecp256k1",
- "mock_ellipticoin",
- "tiny-keccak",
- "wasm-rpc",
- "wasm-rpc-macros",
- "wee_alloc 0.4.5 (git+https://github.com/rustwasm/wee_alloc)",
-]
-
 [[package]]
 name = "tokio"
 version = "0.1.22"
@@ -4178,27 +4099,6 @@ dependencies = [
  "weedle",
 ]
 
-[[package]]
-name = "wasm-rpc"
-version = "0.2.14"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d0b07b477bce82284be749c0bdba0aef6f442074e8dfd5ce3676a2109255e24a"
-dependencies = [
- "serde_cbor 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)",
- "wee_alloc 0.4.5 (registry+https://github.com/rust-lang/crates.io-index)",
-]
-
-[[package]]
-name = "wasm-rpc-macros"
-version = "0.2.14"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "01696d996267e32b51a6c0228923734a4465f0d46a55635225d683d6c5cdd9b0"
-dependencies = [
- "proc-macro2 0.4.30",
- "quote 0.6.13",
- "syn 0.15.44",
-]
-
 [[package]]
 name = "wasm-timer"
 version = "0.2.4"
@@ -4265,29 +4165,6 @@ dependencies = [
  "webpki",
 ]
 
-[[package]]
-name = "wee_alloc"
-version = "0.4.5"
-source = "git+https://github.com/rustwasm/wee_alloc#f26c431df6fb6c7df0d6f8e0675471b9c56d8787"
-dependencies = [
- "cfg-if",
- "libc",
- "memory_units 0.4.0",
- "winapi 0.3.8",
-]
-
-[[package]]
-name = "wee_alloc"
-version = "0.4.5"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "dbb3b5a6b2bb17cb6ad44a2e68a43e8d2722c997da10e928665c72ec6c0a0b8e"
-dependencies = [
- "cfg-if",
- "libc",
- "memory_units 0.4.0",
- "winapi 0.3.8",
-]
-
 [[package]]
 name = "weedle"
 version = "0.10.0"
diff --git a/Cargo.toml b/Cargo.toml
index 7526926..3f0bc08 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -1,7 +1,7 @@
 [workspace]
 members = [
     "ellipticoind",
-    "token",
+#    "token",
     "hashfactor",
     "network",
     "vm",
diff --git a/ellipticoind/src/api/websocket.rs b/ellipticoind/src/api/websocket.rs
index a376624..92fc91b 100644
--- a/ellipticoind/src/api/websocket.rs
+++ b/ellipticoind/src/api/websocket.rs
@@ -22,10 +22,9 @@ impl Websocket {
 
     pub async fn send<M: Clone + Serialize>(&mut self, message: M) {
         for sender in self.senders.lock().await.iter_mut() {
-            sender
+            let _ = sender
                 .send(Message::binary(serde_cbor::to_vec(&message).unwrap()))
-                .await
-                .unwrap();
+                .await;
         }
     }
     pub async fn bind(self, socket: SocketAddr) {
diff --git a/ellipticoind/src/bootnodes.txt b/ellipticoind/src/bootnodes.txt
index ce97abb..d37c341 100644
--- a/ellipticoind/src/bootnodes.txt
+++ b/ellipticoind/src/bootnodes.txt
@@ -1,3 +1,3 @@
 157.230.9.137:4460/vQMn3JvS3ATITteQ+gOYfuVSn2buuAH+4e8NY/CvtwA=
-134.209.218.26:4460/oFsify3780A8KYR0USuS5+8PkxwzKapzbzSpqthze4s=
-134.209.216.179:4460/PQjxd4sLn+QsGPCwqwCCYUEYYh01OT9LFNn/vwkA4Xw=
+134.209.218.26:4460/EfYiXgDjJZLlOloWeERSnNRGVOpYC7NQWKBr6Johlrk=
+134.209.216.179:4460/j8ywUKvax/0AVLRsc7NM+vaLrc2xmLoXs+XQHqWkr3s=
diff --git a/ellipticoind/src/main.rs b/ellipticoind/src/main.rs
index 8d69b9c..1b7ae81 100644
--- a/ellipticoind/src/main.rs
+++ b/ellipticoind/src/main.rs
@@ -10,7 +10,7 @@ use std::net::{IpAddr, SocketAddr, SocketAddrV4};
 struct Opts {
     #[clap(short = "p", long = "port", default_value = "4460")]
     port: u16,
-    #[clap(short = "a", long = "bind-addres", default_value = "127.0.0.1")]
+    #[clap(short = "a", long = "bind-addres", default_value = "0.0.0.0")]
     bind_address: String,
     #[clap(long = "api-port", default_value = "4461")]
     api_port: u16,
diff --git a/ellipticoind/src/miner.rs b/ellipticoind/src/miner.rs
index 7cea4e5..1b9274e 100755
--- a/ellipticoind/src/miner.rs
+++ b/ellipticoind/src/miner.rs
@@ -70,5 +70,5 @@ pub async fn mine_next_block(
 fn random() -> u64 {
     use rand::Rng;
     let mut rng = rand::thread_rng();
-    rng.gen_range(1000, 2000)
+    rng.gen_range(3000, 5000)
 }
diff --git a/ellipticoind/src/models.rs b/ellipticoind/src/models.rs
index 3bc7530..937712e 100644
--- a/ellipticoind/src/models.rs
+++ b/ellipticoind/src/models.rs
@@ -183,6 +183,7 @@ impl From<Transaction> for TransactionWithoutHash {
 
 impl Transaction {
     pub fn set_hash(&mut self) {
+        println!("{:?}", TransactionWithoutHash::from(self.clone()));
         self.hash = sha256(to_vec(&TransactionWithoutHash::from(self.clone())).unwrap());
     }
 }
diff --git a/ellipticoind/src/schema.rs b/ellipticoind/src/schema.rs
index adbe08b..538ea8c 100644
--- a/ellipticoind/src/schema.rs
+++ b/ellipticoind/src/schema.rs
@@ -27,4 +27,7 @@ table! {
 
 joinable!(transactions -> blocks (block_hash));
 
-allow_tables_to_appear_in_same_query!(blocks, transactions,);
+allow_tables_to_appear_in_same_query!(
+    blocks,
+    transactions,
+);
diff --git a/ellipticoind/src/transaction_processor.rs b/ellipticoind/src/transaction_processor.rs
index dfb4797..941725b 100644
--- a/ellipticoind/src/transaction_processor.rs
+++ b/ellipticoind/src/transaction_processor.rs
@@ -1,6 +1,6 @@
 use crate::api;
 use crate::constants::TOKEN_CONTRACT;
-use crate::models::{next_nonce, Block, Transaction};
+use crate::models::{Block, Transaction};
 use crate::system_contracts;
 use dotenv::dotenv;
 use serde_cbor::{from_slice, to_vec};
@@ -51,7 +51,8 @@ pub async fn run_transactions(
         }
     }
     let db = api.db.get().unwrap();
-    let sender_nonce = next_nonce(&db, PUBLIC_KEY.to_vec()) + block_winner_tx_count;
+    //let sender_nonce = next_nonce(&db, PUBLIC_KEY.to_vec()) + block_winner_tx_count;
+    let sender_nonce = random();
     let mint_transaction = vm::Transaction {
         contract_address: TOKEN_CONTRACT.to_vec(),
         sender: PUBLIC_KEY.to_vec(),
@@ -64,6 +65,12 @@ pub async fn run_transactions(
     completed_transactions
 }
 
+fn random() -> u64 {
+    use rand::Rng;
+    let mut rng = rand::thread_rng();
+    rng.gen_range(0, u32::max_value() as u64)
+}
+
 fn run_transaction(
     mut state: &mut vm::State,
     transaction: &vm::Transaction,
diff --git a/network/src/lib.rs b/network/src/lib.rs
index c1e6ecd..b3e3d69 100644
--- a/network/src/lib.rs
+++ b/network/src/lib.rs
@@ -116,19 +116,23 @@ impl Server {
         println!("Listening on {}", self.address);
         Swarm::listen_on(&mut swarm, to_multiaddr(self.address)).unwrap();
 
+    future::poll_fn(move |cx: &mut Context| -> std::task::Poll<Result<(), std::io::Error>> {
         loop {
-            let receiver_fused = receiver.next().fuse();
-            let swarm_fused = swarm.next().fuse();
-            pin_mut!(receiver_fused, swarm_fused);
-            select! {
-                maybe_message = receiver_fused => {
-                    if let Some(message) = maybe_message {
-                        swarm.floodsub.publish(&floodsub_topic, message);
-                    }
-                },
-                _ = swarm_fused => (),
-            };
+            match receiver.poll_next_unpin(cx) {
+                Poll::Ready(Some(line)) => swarm.floodsub.publish(&floodsub_topic, line),
+                Poll::Ready(None) => panic!("Stdin closed"),
+                Poll::Pending => break
+            }
+        }
+        loop {
+            match swarm.poll_next_unpin(cx) {
+                Poll::Ready(Some(event)) => println!("{:?}", event),
+                Poll::Ready(None) => return Poll::Ready(Ok(())),
+                Poll::Pending => break,
+            }
         }
+        Poll::Pending
+    }).await.unwrap()
     }
 
     pub async fn receiver(&self) -> Receiver<Vec<u8>> {
